class OrderSubscriber {
    constructor({ eventBusService, customEmailService }) {
        this.eventBusService = eventBusService;
        this.customEmailService = customEmailService;

        this.eventBusService.subscribe("order.completed", this.handleOrderCompleted.bind(this));
    }

    async handleOrderCompleted(data) {
        try {
            const { email, display_id } = data;

            console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ email –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: ${display_id}`);

            await this.customEmailService.sendMail(
                email,
                `–í–∞—à –∑–∞–∫–∞–∑ #${display_id} –≤—ã–ø–æ–ª–Ω–µ–Ω üéâ`,
                `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—à –∑–∞–∫–∞–∑ #${display_id} —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!`,
                `<h1>–í–∞—à –∑–∞–∫–∞–∑ #${display_id} –≤—ã–ø–æ–ª–Ω–µ–Ω üéâ</h1><p>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å!</p>`
            );
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:", error);
        }
    }
}

export default OrderSubscriber;
